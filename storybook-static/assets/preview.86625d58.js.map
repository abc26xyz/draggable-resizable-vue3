{"version":3,"file":"preview.86625d58.js","sources":["../../src/components/draggable-resizable-vue3/utils/fns.js","../../src/components/draggable-resizable-vue3/utils/dom.js","../../src/components/draggable-resizable-vue3/DraggableResizableVue3.vue","../../.storybook/preview.js"],"sourcesContent":["export function isFunction(func) {\r\n  return (\r\n    typeof func === 'function' ||\r\n    Object.prototype.toString.call(func) === '[object Function]'\r\n  )\r\n}\r\n\r\nexport function snapToGrid(grid, pendingX, pendingY, scale = 1) {\r\n  const [scaleX, scaleY] = typeof scale === 'number' ? [scale, scale] : scale\r\n  const x = Math.round(pendingX / scaleX / grid[0]) * grid[0]\r\n  const y = Math.round(pendingY / scaleY / grid[1]) * grid[1]\r\n  return [x, y]\r\n}\r\n\r\nexport function getSize(el) {\r\n  const rect = el.getBoundingClientRect()\r\n\r\n  return [parseInt(rect.width), parseInt(rect.height)]\r\n}\r\n\r\nexport function computeWidth(parentWidth, left, right) {\r\n  return parentWidth - left - right\r\n}\r\n\r\nexport function computeHeight(parentHeight, top, bottom) {\r\n  return parentHeight - top - bottom\r\n}\r\n\r\nexport function restrictToBounds(value, min, max) {\r\n  if (min !== null && value < min) {\r\n    return min\r\n  }\r\n\r\n  if (max !== null && max < value) {\r\n    return max\r\n  }\r\n\r\n  return value\r\n}\r\n","import { isFunction } from './fns'\r\n\r\nexport function matchesSelectorToParentElements(el, selector, baseNode) {\r\n  let node = el\r\n\r\n  const matchesSelectorFunc = [\r\n    'matches',\r\n    'webkitMatchesSelector',\r\n    'mozMatchesSelector',\r\n    'msMatchesSelector',\r\n    'oMatchesSelector',\r\n  ].find((func) => isFunction(node[func]))\r\n\r\n  if (!isFunction(node[matchesSelectorFunc])) return false\r\n\r\n  do {\r\n    if (node[matchesSelectorFunc](selector)) return true\r\n    if (node === baseNode) return false\r\n    node = node.parentNode\r\n  } while (node)\r\n\r\n  return false\r\n}\r\n\r\nexport function getComputedSize($el) {\r\n  const style = window.getComputedStyle($el)\r\n\r\n  return [\r\n    parseFloat(style.getPropertyValue('width'), 10),\r\n    parseFloat(style.getPropertyValue('height'), 10),\r\n  ]\r\n}\r\n\r\nexport function addEvent(el, event, handler) {\r\n  if (!el) {\r\n    return\r\n  }\r\n  if (el.attachEvent) {\r\n    el.attachEvent('on' + event, handler)\r\n  } else if (el.addEventListener) {\r\n    el.addEventListener(event, handler, true)\r\n  } else {\r\n    el['on' + event] = handler\r\n  }\r\n}\r\n\r\nexport function removeEvent(el, event, handler) {\r\n  if (!el) {\r\n    return\r\n  }\r\n  if (el.detachEvent) {\r\n    el.detachEvent('on' + event, handler)\r\n  } else if (el.removeEventListener) {\r\n    el.removeEventListener(event, handler, true)\r\n  } else {\r\n    el['on' + event] = null\r\n  }\r\n}\r\n","<template>\r\n  <div\r\n    ref=\"el\"\r\n    :style=\"style\"\r\n    :class=\"[\r\n      {\r\n        [classNameActive]: active,\r\n        [classNameDragging]: dragging,\r\n        [classNameResizing]: resizing,\r\n        [classNameDraggable]: draggable,\r\n        [classNameResizable]: resizable,\r\n      },\r\n      className,\r\n    ]\"\r\n    @mousedown=\"elementMouseDown\"\r\n    @touchstart=\"elementTouchDown\"\r\n    @mouseover=\"elementMouseOver\"\r\n    @mouseleave=\"elementMouseLeave\"\r\n  >\r\n    <div :class=\"'drv-' + handlesType\">\r\n      <div\r\n        v-for=\"handleEl in actualHandles\"\r\n        :key=\"handleEl\"\r\n        :class=\"[\r\n          classNameHandle,\r\n          classNameHandle + '-' + handleEl,\r\n          classNameHandle !== 'drv-handle' ? 'drv-handle' : '',\r\n          classNameHandle !== 'drv-handle' ? 'drv-handle' + '-' + handleEl : '',\r\n        ]\"\r\n        :style=\"{\r\n          display: active ? 'block' : 'none',\r\n          // border: slots.handle ? '' : '0.5px solid gray',\r\n        }\"\r\n        @mousedown.stop.prevent=\"handleDown(handleEl, $event)\"\r\n        @touchstart.stop.prevent=\"handleTouchDown(handleEl, $event)\"\r\n      >\r\n        <slot\r\n          v-if=\"slots['handle-' + handleEl]\"\r\n          :name=\"'handle-' + handleEl\"\r\n        ></slot>\r\n        <slot v-if=\"!slots['handle-' + handleEl]\" name=\"handle\"></slot>\r\n      </div>\r\n    </div>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  matchesSelectorToParentElements,\r\n  getComputedSize,\r\n  addEvent,\r\n  removeEvent,\r\n} from './utils/dom'\r\nimport {\r\n  computeWidth,\r\n  computeHeight,\r\n  restrictToBounds,\r\n  snapToGrid,\r\n} from './utils/fns'\r\nimport { ref, computed, onMounted, watch, useSlots } from 'vue'\r\n\r\nconst events = {\r\n  mouse: {\r\n    start: 'mousedown',\r\n    move: 'mousemove',\r\n    stop: 'mouseup',\r\n  },\r\n\r\n  touch: {\r\n    start: 'touchstart',\r\n    move: 'touchmove',\r\n    stop: 'touchend',\r\n  },\r\n}\r\n\r\nconst userSelectNone = {\r\n  userSelect: 'none',\r\n  MozUserSelect: 'none',\r\n  WebkitUserSelect: 'none',\r\n  MsUserSelect: 'none',\r\n}\r\n\r\nconst userSelectAuto = {\r\n  userSelect: 'auto',\r\n  MozUserSelect: 'auto',\r\n  WebkitUserSelect: 'auto',\r\n  MsUserSelect: 'auto',\r\n}\r\n\r\nlet eventsFor = events.mouse\r\n\r\nconst props = defineProps({\r\n  draggable: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  resizable: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  x: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  y: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  z: {\r\n    type: [String, Number],\r\n    default: 'auto',\r\n    validator: (val) => (typeof val === 'string' ? val === 'auto' : val >= 0),\r\n  },\r\n  w: {\r\n    type: [Number, String],\r\n    // default: 200,\r\n    validator: (val) => {\r\n      if (typeof val === 'number') {\r\n        return val > 0\r\n      }\r\n\r\n      return val === 'auto'\r\n    },\r\n  },\r\n  h: {\r\n    type: [Number, String],\r\n    // default: 200,\r\n    validator: (val) => {\r\n      if (typeof val === 'number') {\r\n        return val > 0\r\n      }\r\n      return val === 'auto'\r\n    },\r\n  },\r\n  minWidth: {\r\n    type: Number,\r\n    default: 0,\r\n    validator: (val) => val >= 0,\r\n  },\r\n  minHeight: {\r\n    type: Number,\r\n    default: 0,\r\n    validator: (val) => val >= 0,\r\n  },\r\n  maxWidth: {\r\n    type: Number,\r\n    default: null,\r\n    validator: (val) => val >= 0,\r\n  },\r\n  maxHeight: {\r\n    type: Number,\r\n    default: null,\r\n    validator: (val) => val >= 0,\r\n  },\r\n  active: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  preventDeactivation: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  activeOnHover: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  disableUserSelect: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  enableNativeDrag: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n\r\n  lockAspectRatio: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  handlesType: {\r\n    type: String,\r\n    default: 'handles',\r\n    validator: (val) => ['handles', 'borders', 'custom'].includes(val),\r\n  },\r\n  handles: {\r\n    type: Array,\r\n    default: () => ['tl', 'tm', 'tr', 'mr', 'br', 'bm', 'bl', 'ml'],\r\n    validator: (val) => {\r\n      const s = new Set(['tl', 'tm', 'tr', 'mr', 'br', 'bm', 'bl', 'ml'])\r\n      return new Set(val.filter((h) => s.has(h))).size === val.length\r\n    },\r\n  },\r\n  handlesSize: {\r\n    type: Number,\r\n    default: 10,\r\n  },\r\n  dragHandle: {\r\n    type: String,\r\n    default: null,\r\n  },\r\n  dragCancel: {\r\n    type: String,\r\n    default: null,\r\n  },\r\n  axis: {\r\n    type: String,\r\n    default: 'both',\r\n    validator: (val) => ['x', 'y', 'both'].includes(val),\r\n  },\r\n  grid: {\r\n    type: Array,\r\n    default: () => [1, 1],\r\n  },\r\n  showGrid: {\r\n    type: [Boolean, String],\r\n    default: false,\r\n    validator: (val) => [true, false, 'x', 'y', 'both'].includes(val),\r\n  },\r\n  gridColor: {\r\n    type: String,\r\n    default: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  parent: {\r\n    type: [Boolean, String],\r\n    default: false,\r\n  },\r\n  scale: {\r\n    type: [Number, Array],\r\n    default: 1,\r\n    validator: (val) => {\r\n      if (typeof val === 'number') {\r\n        return val > 0\r\n      }\r\n\r\n      return val.length === 2 && val[0] > 0 && val[1] > 0\r\n    },\r\n  },\r\n  className: {\r\n    type: String,\r\n    default: 'drv',\r\n  },\r\n  classNameDraggable: {\r\n    type: String,\r\n    default: 'drv-draggable',\r\n  },\r\n  classNameResizable: {\r\n    type: String,\r\n    default: 'drv-resizable',\r\n  },\r\n  classNameDragging: {\r\n    type: String,\r\n    default: 'drv-dragging',\r\n  },\r\n  classNameResizing: {\r\n    type: String,\r\n    default: 'drv-resizing',\r\n  },\r\n  classNameActive: {\r\n    type: String,\r\n    default: 'drv-active',\r\n  },\r\n  classNameHandle: {\r\n    type: String,\r\n    default: 'drv-handle',\r\n  },\r\n  onDragStart: {\r\n    type: Function,\r\n    default: () => true,\r\n  },\r\n  onDrag: {\r\n    type: Function,\r\n    default: () => true,\r\n  },\r\n  onResizeStart: {\r\n    type: Function,\r\n    default: () => true,\r\n  },\r\n  onResize: {\r\n    type: Function,\r\n    default: () => true,\r\n  },\r\n})\r\n\r\nconst emit = defineEmits([\r\n  'update:x',\r\n  'update:y',\r\n  'update:w',\r\n  'update:h',\r\n  'update:active',\r\n  'resizing',\r\n  'resizestop',\r\n  'dragging',\r\n  'dragstop',\r\n  'activated',\r\n  'deactivated',\r\n])\r\n\r\nconst el = ref(null)\r\nconst parentEl = ref(null)\r\nconst noProps = ref({ h: 'auto', w: 'auto', active: false, x: 0, y: 0 })\r\nconst slots = useSlots()\r\n\r\nconst width = computed({\r\n  get() {\r\n    return props.w || noProps.value.w\r\n  },\r\n  set(value) {\r\n    emit('update:w', value)\r\n    noProps.value.w = value\r\n  },\r\n})\r\n\r\nconst height = computed({\r\n  get() {\r\n    return props.h || noProps.value.h\r\n  },\r\n\r\n  set(value) {\r\n    emit('update:h', value)\r\n    noProps.value.h = value\r\n  },\r\n})\r\n\r\nconst left = computed({\r\n  get() {\r\n    return props.x || noProps.value.x\r\n  },\r\n\r\n  set(value) {\r\n    emit('update:x', value)\r\n    noProps.value.x = value\r\n  },\r\n})\r\n\r\nconst top = computed({\r\n  get() {\r\n    return props.y || noProps.value.y\r\n  },\r\n\r\n  set(value) {\r\n    emit('update:y', value)\r\n    noProps.value.y = value\r\n  },\r\n})\r\n\r\nconst right = ref(null)\r\nconst bottom = ref(null)\r\n\r\nconst active = computed({\r\n  get() {\r\n    return props.active || noProps.value.active\r\n  },\r\n\r\n  set(value) {\r\n    emit('update:active', value)\r\n    noProps.value.active = value\r\n  },\r\n})\r\nconst handlesSize = computed(() => props.handlesSize + 'px')\r\nconst handlesHalfSize = computed(() => props.handlesSize / 2 + 'px')\r\n\r\nconst widthTouched = ref(false)\r\nconst heightTouched = ref(false)\r\n\r\nconst aspectFactor = ref(null)\r\n\r\nconst parentWidth = ref(null)\r\nconst parentHeight = ref(null)\r\n\r\nconst handle = ref(null)\r\nconst resizing = ref(false)\r\nconst dragging = ref(false)\r\nconst dragEnable = ref(false)\r\nconst resizeEnable = ref(false)\r\nconst zIndex = ref(props.z)\r\nconst mouseClickPosition = ref(null)\r\nconst bounds = ref(null)\r\n\r\nconst style = computed(() => {\r\n  return {\r\n    transform: `translate(${left.value}px, ${top.value}px)`,\r\n    width: computedWidth.value,\r\n    height: computedHeight.value,\r\n    zIndex: zIndex.value,\r\n    ...(dragging.value && props.disableUserSelect\r\n      ? userSelectNone\r\n      : userSelectAuto),\r\n  }\r\n})\r\n\r\nconst parentGridBackgroundStyle = computed(() => {\r\n  const axisBg = {\r\n    x: `linear-gradient(-90deg, ${props.gridColor} 1px, transparent 1px) 0px 0px / ${props.grid[0]}px ${props.grid[0]}px`,\r\n    y: `linear-gradient(0deg, ${props.gridColor} 1px, transparent 1px) 0px 0px / ${props.grid[1]}px ${props.grid[1]}px`,\r\n  }\r\n\r\n  if (props.showGrid === 'x' || props.showGrid === 'y') {\r\n    return axisBg[props.showGrid]\r\n  }\r\n\r\n  return props.showGrid ? `${axisBg.x}, ${axisBg.y}` : null\r\n})\r\n\r\nconst actualHandles = computed(() => {\r\n  if (!props.resizable) return []\r\n\r\n  return props.handles\r\n})\r\n\r\nconst computedWidth = computed(() => {\r\n  if (width.value === 'auto') {\r\n    if (!widthTouched.value) {\r\n      return 'auto'\r\n    }\r\n  }\r\n\r\n  return width.value + 'px'\r\n})\r\n\r\nconst computedHeight = computed(() => {\r\n  if (height.value === 'auto') {\r\n    if (!heightTouched.value) {\r\n      return 'auto'\r\n    }\r\n  }\r\n\r\n  return height.value + 'px'\r\n})\r\nconst minW = ref(props.minWidth)\r\nconst minH = ref(props.minHeight)\r\nconst maxW = ref(props.maxWidth)\r\nconst maxH = ref(props.maxHeight)\r\n\r\nconst resizingOnX = computed(() => {\r\n  return (\r\n    Boolean(handle.value) &&\r\n    (handle.value.includes('l') || handle.value.includes('r'))\r\n  )\r\n})\r\n\r\nconst resizingOnY = computed(() => {\r\n  return (\r\n    Boolean(handle.value) &&\r\n    (handle.value.includes('t') || handle.value.includes('b'))\r\n  )\r\n})\r\n\r\n// const isCornerHandle = computed(() => {\r\n//   return (\r\n//     Boolean(handle.value) && ['tl', 'tr', 'br', 'bl'].includes(handle.value)\r\n//   )\r\n// })\r\n\r\n// methods\r\nconst resetBoundsAndMouseState = () => {\r\n  mouseClickPosition.value = {\r\n    mouseX: 0,\r\n    mouseY: 0,\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  }\r\n\r\n  bounds.value = {\r\n    minLeft: null,\r\n    maxLeft: null,\r\n    minRight: null,\r\n    maxRight: null,\r\n    minTop: null,\r\n    maxTop: null,\r\n    minBottom: null,\r\n    maxBottom: null,\r\n  }\r\n}\r\n\r\nconst checkParentSize = () => {\r\n  if (props.parent) {\r\n    const [newParentWidth, newParentHeight] = getParentSize()\r\n\r\n    parentWidth.value = newParentWidth\r\n    parentHeight.value = newParentHeight\r\n\r\n    right.value = parentWidth.value - width.value - left.value\r\n    bottom.value = parentHeight.value - height.value - top.value\r\n  }\r\n}\r\n\r\nconst getParentSize = () => {\r\n  if (props.parent) {\r\n    const parent =\r\n      typeof props.parent === 'string'\r\n        ? el.value.closest(props.parent)\r\n        : el.value.parentNode\r\n    parentEl.value = parent\r\n    const style = window.getComputedStyle(parent, null)\r\n    return [\r\n      parseInt(style.getPropertyValue('width'), 10),\r\n      parseInt(style.getPropertyValue('height'), 10),\r\n    ]\r\n  }\r\n\r\n  return [null, null]\r\n}\r\n\r\nconst showParentGrid = () => {\r\n  if (props.parent && props.showGrid) {\r\n    if (!parentEl.value) {\r\n      const parent =\r\n        typeof props.parent === 'string'\r\n          ? el.value.closest(props.parent)\r\n          : el.value.parentNode\r\n      parentEl.value = parent\r\n    }\r\n\r\n    parentEl.value.style.background = parentGridBackgroundStyle.value\r\n  }\r\n}\r\n\r\nconst elementTouchDown = (e) => {\r\n  eventsFor = events.touch\r\n  elementDown(e)\r\n}\r\n\r\nconst elementMouseDown = (e) => {\r\n  eventsFor = events.mouse\r\n  elementDown(e)\r\n}\r\n\r\nconst elementDown = (e) => {\r\n  if (e instanceof MouseEvent && e.which !== 1) {\r\n    return\r\n  }\r\n\r\n  const target = e.target || e.srcElement\r\n\r\n  if (el.value.contains(target)) {\r\n    if (props.onDragStart(e) === false) {\r\n      return\r\n    }\r\n\r\n    if (\r\n      (props.dragHandle &&\r\n        !matchesSelectorToParentElements(target, props.dragHandle, el.value)) ||\r\n      (props.dragCancel &&\r\n        matchesSelectorToParentElements(target, props.dragCancel, el.value))\r\n    ) {\r\n      dragging.value = false\r\n      return\r\n    }\r\n\r\n    if (!active.value) {\r\n      active.value = true\r\n      emit('activated')\r\n      // emit('update:active', true)\r\n    }\r\n\r\n    if (props.draggable) {\r\n      dragEnable.value = true\r\n    }\r\n\r\n    mouseClickPosition.value.mouseX = e.touches ? e.touches[0].pageX : e.pageX\r\n    mouseClickPosition.value.mouseY = e.touches ? e.touches[0].pageY : e.pageY\r\n    mouseClickPosition.value.left = left.value\r\n    mouseClickPosition.value.right = right.value\r\n    mouseClickPosition.value.top = top.value\r\n    mouseClickPosition.value.bottom = bottom.value\r\n\r\n    if (props.parent) {\r\n      bounds.value = calcDragLimits()\r\n    }\r\n\r\n    addEvent(document.documentElement, eventsFor.move, move)\r\n    addEvent(document.documentElement, eventsFor.stop, handleUp)\r\n  }\r\n}\r\n\r\nconst calcDragLimits = () => {\r\n  return {\r\n    minLeft: left.value % props.grid[0],\r\n    maxLeft:\r\n      Math.floor(\r\n        (parentWidth.value - width.value - left.value) / props.grid[0],\r\n      ) *\r\n        props.grid[0] +\r\n      left.value,\r\n\r\n    minRight: right.value % props.grid[0],\r\n    maxRight:\r\n      Math.floor(\r\n        (parentWidth.value - width.value - right.value) / props.grid[0],\r\n      ) *\r\n        props.grid[0] +\r\n      right.value,\r\n\r\n    minTop: top.value % props.grid[1],\r\n    maxTop:\r\n      Math.floor(\r\n        (parentHeight.value - height.value - top.value) / props.grid[1],\r\n      ) *\r\n        props.grid[1] +\r\n      top.value,\r\n    minBottom: bottom.value % props.grid[1],\r\n    maxBottom:\r\n      Math.floor(\r\n        (parentHeight.value - height.value - bottom.value) / props.grid[1],\r\n      ) *\r\n        props.grid[1] +\r\n      bottom.value,\r\n  }\r\n}\r\n\r\nconst deselect = (e) => {\r\n  const target = e.target || e.srcElement\r\n\r\n  const regex = new RegExp(props.className + '-([trmbl]{2})', '')\r\n  if (\r\n    !el.value ||\r\n    (!el.value.contains(target) && !regex.test(target.className))\r\n  ) {\r\n    if (active.value && !props.preventDeactivation) {\r\n      active.value = false\r\n      emit('deactivated')\r\n      // emit('update:active', false)\r\n    }\r\n\r\n    removeEvent(document.documentElement, eventsFor.move, handleResize)\r\n  }\r\n\r\n  resetBoundsAndMouseState()\r\n}\r\n\r\nconst handleTouchDown = (handle, e) => {\r\n  eventsFor = events.touch\r\n  handleDown(handle, e)\r\n}\r\n\r\nconst handleDown = (handleEl, e) => {\r\n  if (e instanceof MouseEvent && e.which !== 1) {\r\n    return\r\n  }\r\n\r\n  if (props.onResizeStart(handleEl, e) === false) {\r\n    return\r\n  }\r\n\r\n  if (e.stopPropagation) e.stopPropagation()\r\n\r\n  // Here we avoid a dangerous recursion by faking\r\n\r\n  // corner handles as middle handles\r\n\r\n  if (props.lockAspectRatio && !handleEl.includes('m')) {\r\n    handle.value = 'm' + handleEl.substring(1)\r\n  } else {\r\n    handle.value = handleEl\r\n  }\r\n\r\n  resizeEnable.value = true\r\n\r\n  mouseClickPosition.value.mouseX = e.touches ? e.touches[0].pageX : e.pageX\r\n  mouseClickPosition.value.mouseY = e.touches ? e.touches[0].pageY : e.pageY\r\n  mouseClickPosition.value.left = left.value\r\n  mouseClickPosition.value.right = right.value\r\n  mouseClickPosition.value.top = top.value\r\n  mouseClickPosition.value.bottom = bottom.value\r\n\r\n  bounds.value = calcResizeLimits()\r\n\r\n  addEvent(document.documentElement, eventsFor.move, handleResize)\r\n  addEvent(document.documentElement, eventsFor.stop, handleUp)\r\n}\r\n\r\nconst calcResizeLimits = () => {\r\n  const [gridX, gridY] = props.grid\r\n\r\n  if (props.lockAspectRatio) {\r\n    if (minW.value / minH.value > aspectFactor.value) {\r\n      minH.value = minW.value / aspectFactor.value\r\n    } else {\r\n      minW.value = aspectFactor.value * minH.value\r\n    }\r\n\r\n    if (maxW.value && maxH.value) {\r\n      maxW.value = Math.min(maxW.value, aspectFactor.value * maxH.value)\r\n      maxH.value = Math.min(maxH.value, maxW.value / aspectFactor.value)\r\n    } else if (maxW.value) {\r\n      maxH.value = maxW.value / aspectFactor.value\r\n    } else if (maxH.value) {\r\n      maxW.value = aspectFactor.value * maxH.value\r\n    }\r\n  }\r\n\r\n  maxW.value = maxW.value - (maxW.value % gridX)\r\n  maxH.value = maxH.value - (maxH.value % gridY)\r\n\r\n  const limits = {\r\n    minLeft: null,\r\n    maxLeft: null,\r\n    minTop: null,\r\n    maxTop: null,\r\n    minRight: null,\r\n    maxRight: null,\r\n    minBottom: null,\r\n    maxBottom: null,\r\n  }\r\n\r\n  if (props.parent) {\r\n    limits.minLeft = left.value % gridX\r\n    limits.maxLeft =\r\n      left.value + Math.floor((width.value - minW.value) / gridX) * gridX\r\n    limits.minTop = top.value % gridY\r\n    limits.maxTop =\r\n      top.value + Math.floor((height.value - minH.value) / gridY) * gridY\r\n    limits.minRight = right.value % gridX\r\n    limits.maxRight =\r\n      right.value + Math.floor((width.value - minW.value) / gridX) * gridX\r\n    limits.minBottom = bottom.value % gridY\r\n    limits.maxBottom =\r\n      bottom.value + Math.floor((height.value - minH.value) / gridY) * gridY\r\n\r\n    if (maxW.value) {\r\n      limits.minLeft = Math.max(\r\n        limits.minLeft,\r\n        parentWidth.value - right.value - maxW.value,\r\n      )\r\n\r\n      limits.minRight = Math.max(\r\n        limits.minRight,\r\n        parentWidth.value - left.value - maxW.value,\r\n      )\r\n    }\r\n\r\n    if (maxH.value) {\r\n      limits.minTop = Math.max(\r\n        limits.minTop,\r\n        parentHeight.value - bottom.value - maxH.value,\r\n      )\r\n\r\n      limits.minBottom = Math.max(\r\n        limits.minBottom,\r\n        parentHeight.value - top.value - maxH.value,\r\n      )\r\n    }\r\n\r\n    if (props.lockAspectRatio) {\r\n      limits.minLeft = Math.max(\r\n        limits.minLeft,\r\n        left.value - top.value * aspectFactor.value,\r\n      )\r\n      limits.minTop = Math.max(\r\n        limits.minTop,\r\n        top.value - left.value / aspectFactor.value,\r\n      )\r\n      limits.minRight = Math.max(\r\n        limits.minRight,\r\n        right.value - bottom.value * aspectFactor.value,\r\n      )\r\n      limits.minBottom = Math.max(\r\n        limits.minBottom,\r\n        bottom.value - right.value / aspectFactor.value,\r\n      )\r\n    }\r\n  } else {\r\n    limits.minLeft = null\r\n    limits.maxLeft =\r\n      left.value + Math.floor((width.value - minW.value) / gridX) * gridX\r\n    limits.minTop = null\r\n    limits.maxTop =\r\n      top.value + Math.floor((height.value - minH.value) / gridY) * gridY\r\n    limits.minRight = null\r\n    limits.maxRight =\r\n      right.value + Math.floor((width.value - minW.value) / gridX) * gridX\r\n    limits.minBottom = null\r\n    limits.maxBottom =\r\n      bottom.value + Math.floor((height.value - minH.value) / gridY) * gridY\r\n\r\n    if (maxW.value) {\r\n      limits.minLeft = -(right.value + maxW.value)\r\n      limits.minRight = -(left.value + maxW.value)\r\n    }\r\n\r\n    if (maxH.value) {\r\n      limits.minTop = -(bottom.value + maxH.value)\r\n      limits.minBottom = -(top.value + maxH.value)\r\n    }\r\n\r\n    if (props.lockAspectRatio && maxW.value && maxH.value) {\r\n      limits.minLeft = Math.min(limits.minLeft, -(right.value + maxW.value))\r\n      limits.minTop = Math.min(limits.minTop, -(maxH.value + bottom.value))\r\n      limits.minRight = Math.min(limits.minRight, -left.value - maxW.value)\r\n      limits.minBottom = Math.min(limits.minBottom, -top.value - maxH.value)\r\n    }\r\n  }\r\n\r\n  return limits\r\n}\r\n\r\nconst move = (e) => {\r\n  if (resizing.value) {\r\n    handleResize(e)\r\n  } else if (dragEnable.value) {\r\n    handleDrag(e)\r\n  }\r\n}\r\nconst handleDrag = (e) => {\r\n  const grid = props.grid\r\n\r\n  const tmpDeltaX =\r\n    props.axis && props.axis !== 'y'\r\n      ? mouseClickPosition.value.mouseX -\r\n        (e.touches ? e.touches[0].pageX : e.pageX)\r\n      : 0\r\n\r\n  const tmpDeltaY =\r\n    props.axis && props.axis !== 'x'\r\n      ? mouseClickPosition.value.mouseY -\r\n        (e.touches ? e.touches[0].pageY : e.pageY)\r\n      : 0\r\n\r\n  const [deltaX, deltaY] = snapToGrid(grid, tmpDeltaX, tmpDeltaY, props.scale)\r\n\r\n  const leftPx = restrictToBounds(\r\n    mouseClickPosition.value.left - deltaX,\r\n    bounds.value.minLeft,\r\n    bounds.value.maxLeft,\r\n  )\r\n\r\n  const topPx = restrictToBounds(\r\n    mouseClickPosition.value.top - deltaY,\r\n    bounds.value.minTop,\r\n    bounds.value.maxTop,\r\n  )\r\n\r\n  if (props.onDrag(left, top) === false) {\r\n    return\r\n  }\r\n\r\n  const rightPx = restrictToBounds(\r\n    mouseClickPosition.value.right + deltaX,\r\n    bounds.value.minRight,\r\n    bounds.value.maxRight,\r\n  )\r\n\r\n  const bottomPx = restrictToBounds(\r\n    mouseClickPosition.value.bottom + deltaY,\r\n    bounds.value.minBottom,\r\n    bounds.value.maxBottom,\r\n  )\r\n\r\n  left.value = leftPx\r\n  top.value = topPx\r\n  right.value = rightPx\r\n  bottom.value = bottomPx\r\n\r\n  emit('dragging', left.value, top.value)\r\n\r\n  dragging.value = true\r\n}\r\n\r\nconst moveHorizontally = (val) => {\r\n  // should calculate with scale 1.\r\n\r\n  const [deltaX, _] = snapToGrid(props.grid, val, top.value, 1)\r\n\r\n  const leftPx = restrictToBounds(\r\n    deltaX,\r\n    bounds.value.minLeft,\r\n    bounds.value.maxLeft,\r\n  )\r\n\r\n  left.value = leftPx\r\n  right.value = parentWidth.value - width.value - leftPx\r\n}\r\n\r\nconst moveVertically = (val) => {\r\n  // should calculate with scale 1.\r\n\r\n  const [_, deltaY] = snapToGrid(props.grid, left.value, val, 1)\r\n\r\n  const topPx = restrictToBounds(\r\n    deltaY,\r\n    bounds.value.minTop,\r\n    bounds.value.maxTop,\r\n  )\r\n\r\n  top.value = topPx\r\n  bottom.value = parentHeight.value - height.value - topPx\r\n}\r\n\r\nconst handleResize = (e) => {\r\n  let leftPx = left.value\r\n  let topPx = top.value\r\n  let rightPx = right.value\r\n  let bottomPx = bottom.value\r\n\r\n  // const lockAspectRatio = props.lockAspectRatio\r\n\r\n  const tmpDeltaX =\r\n    mouseClickPosition.value.mouseX - (e.touches ? e.touches[0].pageX : e.pageX)\r\n\r\n  const tmpDeltaY =\r\n    mouseClickPosition.value.mouseY - (e.touches ? e.touches[0].pageY : e.pageY)\r\n\r\n  if (!widthTouched.value && tmpDeltaX) {\r\n    widthTouched.value = true\r\n  }\r\n\r\n  if (!heightTouched.value && tmpDeltaY) {\r\n    heightTouched.value = true\r\n  }\r\n\r\n  const [deltaX, deltaY] = snapToGrid(\r\n    props.grid,\r\n    tmpDeltaX,\r\n    tmpDeltaY,\r\n    props.scale,\r\n  )\r\n\r\n  if (handle.value.includes('b')) {\r\n    bottomPx = restrictToBounds(\r\n      mouseClickPosition.value.bottom + deltaY,\r\n      bounds.value.minBottom,\r\n      bounds.value.maxBottom,\r\n    )\r\n\r\n    if (props.lockAspectRatio && resizingOnY) {\r\n      rightPx = right.value - (bottom.value - bottomPx) * aspectFactor.value\r\n    }\r\n  } else if (handle.value.includes('t')) {\r\n    topPx = restrictToBounds(\r\n      mouseClickPosition.value.top - deltaY,\r\n      bounds.value.minTop,\r\n      bounds.value.maxTop,\r\n    )\r\n\r\n    if (props.lockAspectRatio && resizingOnY) {\r\n      leftPx = left.value - (top.value - topPx) * aspectFactor.value\r\n    }\r\n  }\r\n\r\n  if (handle.value.includes('r')) {\r\n    rightPx = restrictToBounds(\r\n      mouseClickPosition.value.right + deltaX,\r\n      bounds.value.minRight,\r\n      bounds.value.maxRight,\r\n    )\r\n\r\n    if (props.lockAspectRatio && resizingOnX) {\r\n      bottomPx = bottom.value - (right.value - rightPx) / aspectFactor.value\r\n    }\r\n  } else if (handle.value.includes('l')) {\r\n    leftPx = restrictToBounds(\r\n      mouseClickPosition.value.left - deltaX,\r\n      bounds.value.minLeft,\r\n      bounds.value.maxLeft,\r\n    )\r\n\r\n    if (props.lockAspectRatio && resizingOnX) {\r\n      topPx = top.value - (left.value - leftPx) / aspectFactor.value\r\n    }\r\n  }\r\n\r\n  const widthPx = computeWidth(parentWidth.value, leftPx, rightPx)\r\n\r\n  const heightPx = computeHeight(parentHeight.value, topPx, bottomPx)\r\n\r\n  if (\r\n    props.onResize(handle.value, leftPx, topPx, widthPx, heightPx) === false\r\n  ) {\r\n    return\r\n  }\r\n\r\n  left.value = leftPx\r\n  top.value = topPx\r\n  right.value = rightPx\r\n  bottom.value = bottomPx\r\n  width.value = widthPx\r\n  height.value = heightPx\r\n\r\n  emit('resizing', left.value, top.value, width.value, height.value)\r\n\r\n  resizing.value = true\r\n}\r\n\r\nconst changeWidth = (val) => {\r\n  // should calculate with scale 1.\r\n\r\n  const [newWidth] = snapToGrid(props.grid, val, 0, 1)\r\n\r\n  let rightPx = restrictToBounds(\r\n    parentWidth.value - newWidth - left.value,\r\n    bounds.value.minRight,\r\n    bounds.value.maxRight,\r\n  )\r\n\r\n  let bottomPx = bottom.value\r\n\r\n  if (props.lockAspectRatio) {\r\n    bottomPx = bottom.value - (right.value - rightPx) / aspectFactor.value\r\n  }\r\n\r\n  const widthPx = computeWidth(parentWidth.value, left.value, rightPx)\r\n  const heightPx = computeHeight(parentHeight.value, top.value, bottomPx)\r\n\r\n  right.value = rightPx\r\n  bottom.value = bottomPx\r\n  width.value = widthPx\r\n  height.value = heightPx\r\n}\r\n\r\nconst changeHeight = (val) => {\r\n  // should calculate with scale 1.\r\n\r\n  const [_, newHeight] = snapToGrid(props.grid, 0, val, 1)\r\n\r\n  let bottomPx = restrictToBounds(\r\n    parentHeight.value - newHeight - top.value,\r\n    bounds.value.minBottom,\r\n    bounds.value.maxBottom,\r\n  )\r\n\r\n  let rightPx = right.value\r\n\r\n  if (props.lockAspectRatio) {\r\n    rightPx = right.value - (bottom.value - bottomPx) * aspectFactor.value\r\n  }\r\n\r\n  const widthPx = computeWidth(parentWidth.value, left.value, rightPx)\r\n\r\n  const heightPx = computeHeight(parentHeight.value, top.value, bottomPx)\r\n\r\n  right.value = rightPx\r\n  bottom.value = bottomPx\r\n  width.value = widthPx\r\n  height.value = heightPx\r\n}\r\n\r\nconst handleUp = (e) => {\r\n  handle.value = null\r\n\r\n  resetBoundsAndMouseState()\r\n\r\n  dragEnable.value = false\r\n  resizeEnable.value = false\r\n\r\n  if (resizing.value) {\r\n    resizing.value = false\r\n\r\n    emit('resizestop', left.value, top.value, width.value, height.value)\r\n  }\r\n\r\n  if (dragging.value) {\r\n    dragging.value = false\r\n\r\n    emit('dragstop', left.value, top.value)\r\n  }\r\n\r\n  removeEvent(document.documentElement, eventsFor.move, handleResize)\r\n}\r\n\r\nconst elementMouseOver = () => {\r\n  if (props.activeOnHover) {\r\n    active.value = true\r\n  }\r\n}\r\nconst elementMouseLeave = () => {\r\n  if (props.activeOnHover && !dragging.value) {\r\n    active.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  resetBoundsAndMouseState()\r\n\r\n  if (!props.enableNativeDrag) {\r\n    el.value.ondragstart = () => false\r\n  }\r\n\r\n  const [parentWidthPx, parentHeightPx] = getParentSize()\r\n\r\n  parentWidth.value = parentWidthPx\r\n  parentHeight.value = parentHeightPx\r\n\r\n  const [widthPx, heightPx] = getComputedSize(el.value)\r\n\r\n  aspectFactor.value =\r\n    (width.value !== 'auto' ? width.value : widthPx) /\r\n    (height.value !== 'auto' ? height.value : heightPx)\r\n\r\n  width.value = width.value !== 'auto' ? width.value : widthPx\r\n  height.value = height.value !== 'auto' ? height.value : heightPx\r\n  right.value = parentWidth.value - width.value - left.value\r\n  bottom.value = parentHeight.value - height.value - top.value\r\n\r\n  if (active.value) {\r\n    emit('activated')\r\n  }\r\n\r\n  if (props.showGrid) {\r\n    showParentGrid()\r\n  }\r\n\r\n  addEvent(document.documentElement, 'mousedown', deselect)\r\n  addEvent(document.documentElement, 'touchend touchcancel', deselect)\r\n  addEvent(window, 'resize', checkParentSize)\r\n})\r\n\r\nwatch(\r\n  () => props.x,\r\n  (val) => {\r\n    if (resizing.value || dragging.value) {\r\n      return\r\n    }\r\n\r\n    if (props.parent) {\r\n      bounds.value = calcDragLimits()\r\n    }\r\n\r\n    moveHorizontally(val)\r\n  },\r\n)\r\n\r\nwatch(\r\n  () => props.y,\r\n  (val) => {\r\n    if (resizing.value || dragging.value) {\r\n      return\r\n    }\r\n\r\n    if (props.parent) {\r\n      bounds.value = calcDragLimits()\r\n    }\r\n\r\n    moveVertically(val)\r\n  },\r\n)\r\n\r\nwatch(\r\n  () => props.lockAspectRatio,\r\n  (val) => {\r\n    if (val) {\r\n      aspectFactor.value = width.value / height.value\r\n    } else {\r\n      aspectFactor.value = undefined\r\n    }\r\n  },\r\n)\r\n\r\nwatch(\r\n  () => props.w,\r\n  (val) => {\r\n    if (resizing.value || dragging.value) {\r\n      return\r\n    }\r\n\r\n    if (props.parent) {\r\n      bounds.value = calcResizeLimits()\r\n    }\r\n\r\n    changeWidth(val)\r\n  },\r\n)\r\n\r\nwatch(\r\n  () => props.h,\r\n  (val) => {\r\n    if (resizing.value || dragging.value) {\r\n      return\r\n    }\r\n\r\n    if (props.parent) {\r\n      bounds.value = calcResizeLimits()\r\n    }\r\n\r\n    changeHeight(val)\r\n  },\r\n)\r\n\r\nwatch(\r\n  () => props.showGrid,\r\n  () => {\r\n    showParentGrid()\r\n  },\r\n)\r\n</script>\r\n\r\n<style>\r\n.drv {\r\n  touch-action: none;\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  border: 1px dashed gray;\r\n}\r\n\r\n.drv-handles .drv-handle {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  min-width: v-bind(handlesSize);\r\n  min-height: v-bind(handlesSize);\r\n  border: 0.5px solid gray;\r\n}\r\n\r\n.drv-handles .drv-handle-tl {\r\n  transform: translate(-100%, -100%);\r\n  top: 0;\r\n  left: 0;\r\n  cursor: nw-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-tm {\r\n  transform: translate(-50%, -100%);\r\n  top: 0;\r\n  left: 50%;\r\n  cursor: n-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-tr {\r\n  transform: translate(100%, -100%);\r\n  top: 0;\r\n  right: 0;\r\n  cursor: ne-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-ml {\r\n  transform: translate(-100%, -50%);\r\n  top: 50%;\r\n  left: 0;\r\n  cursor: w-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-mr {\r\n  transform: translate(100%, -50%);\r\n  top: 50%;\r\n  right: 0;\r\n  cursor: e-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-bl {\r\n  transform: translate(-100%, 100%);\r\n  bottom: 0;\r\n  left: 0;\r\n  cursor: sw-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-bm {\r\n  transform: translate(-50%, 100%);\r\n  bottom: 0;\r\n  left: 50%;\r\n  cursor: s-resize;\r\n}\r\n\r\n.drv-handles .drv-handle-br {\r\n  transform: translate(100%, 100%);\r\n  bottom: 0;\r\n  right: 0;\r\n  cursor: se-resize;\r\n}\r\n\r\n.drv-borders .drv-handle {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  min-width: v-bind(handlesSize);\r\n  min-height: v-bind(handlesSize);\r\n}\r\n\r\n.drv-borders .drv-handle-tl {\r\n  transform: translate(-50%, -50%);\r\n  top: 0;\r\n  left: 0;\r\n  cursor: nw-resize;\r\n}\r\n.drv-borders .drv-handle-tm {\r\n  transform: translate(0, -50%);\r\n  left: v-bind(handlesHalfSize);\r\n  width: calc(100% - v-bind(handlesSize));\r\n  top: 0;\r\n  cursor: n-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-tr {\r\n  transform: translate(50%, -50%);\r\n  top: 0;\r\n  right: 0;\r\n  cursor: ne-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-ml {\r\n  transform: translate(-50%, 0);\r\n  top: v-bind(handlesHalfSize);\r\n  height: calc(100% - v-bind(handlesSize));\r\n  left: 0;\r\n  cursor: w-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-bl {\r\n  transform: translate(-50%, 50%);\r\n  bottom: 0;\r\n  left: 0;\r\n  cursor: sw-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-bm {\r\n  transform: translate(0, 50%);\r\n  left: v-bind(handlesHalfSize);\r\n  width: calc(100% - v-bind(handlesSize));\r\n  bottom: 0;\r\n  cursor: s-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-br {\r\n  transform: translate(50%, 50%);\r\n  bottom: 0;\r\n  right: 0;\r\n  cursor: se-resize;\r\n}\r\n\r\n.drv-borders .drv-handle-mr {\r\n  transform: translate(50%, 0);\r\n  top: v-bind(handlesHalfSize);\r\n  height: calc(100% - v-bind(handlesSize));\r\n  right: 0;\r\n  cursor: e-resize;\r\n}\r\n</style>\r\n","\n\nimport {app } from '@storybook/vue3';\nimport DraggableResizableVue from '../src/components/draggable-resizable-vue3/DraggableResizableVue3.vue'\napp.component('DraggableResizableVue', DraggableResizableVue);\n\nexport const parameters = {\n  // actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n\n}\nexport const options = {\n  /**\n   * display panel that shows addon configurations\n   * @type {Boolean}\n   */\n  showPanel: false\n}\n"],"names":["isFunction","func","snapToGrid","grid","pendingX","pendingY","scale","scaleX","scaleY","x","y","computeWidth","parentWidth","left","right","computeHeight","parentHeight","top","bottom","restrictToBounds","value","min","max","matchesSelectorToParentElements","el","selector","baseNode","node","matchesSelectorFunc","getComputedSize","$el","style","addEvent","event","handler","removeEvent","events","userSelectNone","userSelectAuto","eventsFor","ref","parentEl","noProps","slots","useSlots","width","computed","props","emit","height","active","handlesSize","handlesHalfSize","widthTouched","heightTouched","aspectFactor","handle","resizing","dragging","dragEnable","resizeEnable","zIndex","mouseClickPosition","bounds","computedWidth","computedHeight","parentGridBackgroundStyle","axisBg","actualHandles","minW","minH","maxW","maxH","resizingOnX","resizingOnY","resetBoundsAndMouseState","checkParentSize","newParentWidth","newParentHeight","getParentSize","parent","showParentGrid","elementTouchDown","e","elementDown","elementMouseDown","target","calcDragLimits","move","handleUp","deselect","regex","handleResize","handleTouchDown","handleDown","handleEl","calcResizeLimits","gridX","gridY","limits","handleDrag","tmpDeltaX","tmpDeltaY","deltaX","deltaY","leftPx","topPx","rightPx","bottomPx","moveHorizontally","val","_","moveVertically","widthPx","heightPx","changeWidth","newWidth","changeHeight","newHeight","elementMouseOver","elementMouseLeave","onMounted","parentWidthPx","parentHeightPx","watch","app","DraggableResizableVue","parameters","options"],"mappings":"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"}